create table UserDepartments(
Department varchar(100) unique
)

insert into UserDepartments (Department) values ('Производство'), 
('Поддержка пользователей'), ('Бухгалтерия'), ('Администрация')

create table Users (
UID int primary key,
Name varchar(100) not null,
Login varchar(20) unique,
Email varchar(20) unique,
Department varchar(100),
foreign key (Department) references UserDepartments (Department)
)

create table Projects (
PID int primary key,
BelongingToTheUser int,
Title varchar(100) not null,
Description text,
StartDate Date,
FinishDate Date,
foreign key (BelongingToTheUser) references Users (UID)
)

create table TaskStatuses(
Status varchar(100) unique
)

insert into TaskStatuses (Status) values ('Новая'), ('Переоткрыта'), 
('Выполняется'), ('Закрыта')

create table Tasks (
BelongingToTheProject int,
TaskExecutor int,
TaskCreator int not null,
Heading varchar(100) not null,
Priority int,
Description text, 
Status varchar(100),
Evaluation int,
Costs int,
foreign key (BelongingToTheProject) references Projects (PID),
foreign key (TaskExecutor) references Users (UID),
foreign key (TaskCreator) references Users (UID),
foreign key (Status) references TaskStatuses (Status)
)

insert into Users (UID, Name, Login, Email, Department) values 
('1', 'Касаткин Артём', 'kasatkin', 'a.kasatkin@mail.ru', 'Администрация'),
('2', 'Петрова София', 'petrova', 's.petrova@mail.ru', 'Бухгалтерия'),
('3', 'Дроздов Фёдор', 'drozdov', 'f.drozdov@mail.ru', 'Администрация'),
('4', 'Иванова Василина', 'ivanova', 'v.ivanova@mail.ru', 'Бухгалтерия'),
('5', 'Беркут Алексей', 'berkut', 'a.berkut@mail.ru', 'Поддержка пользователей'),
('6', 'Белова Вера', 'belova', 'v.belova@mail.ru', 'Производство'),
('7', 'Макенрой Алексей', 'mcenroe', 'a.mcenroe@mail.ru', 'Производство')

insert into Projects (PID, Title, StartDate) values 
('1', 'РТК', '31/01/2022'),
('5', 'Поддержка', '06/07/2022')

insert into Projects (PID, Title, StartDate, FinishDate) values 
('2', 'СС.Коннект', '02/03/2023', '11/03/2023'),
('3', 'Демо-Сибирь', '05/11/2022', '02/12/2023'),
('4', 'МВД-Онлайн', '05/02/2022', '03/09/2023')

INSERT INTO Tasks (BelongingToTheProject, TaskExecutor, TaskCreator, Heading, Priority, Status, Evaluation) VALUES
('1', '1', '2','Автоматизация учета рабочего времени сотрудников', 60, 'Выполняется', 10),
('1', '2', '3', 'Разработка мобильного приложения для онлайн-обучения', 10, 'Новая', 40),
('2', '3', '4', 'Создание платформы для управления проектами', 70, 'Переоткрыта', 20),
('2', '4', '5', 'Оптимизация процесса обработки заказов и доставки', 40, 'Закрыта', 8),
('3', '5', '6', 'Разработка системы мониторинга здоровья пациентов', 90, 'Выполняется', 12),
('3', '6', '7', 'Интеграция и анализ данных для принятия решений', 5, 'Новая', 16),
('4', '7', '1', 'Создание веб-сервиса для бронирования гостиничных номеров', 50, 'Выполняется', 18),
('4', '1', '3', 'Разработка игрового приложения для обучения детей математике', 30, 'Закрыта', 6),
('5', '3', '5', 'Оптимизация работы call-центра с помощью AI', 45, 'Закрыта', 10),
('5', '5', '7', 'Создание платформы для онлайн-консультаций специалистов', 55, 'Переоткрыта', 12);




5.1

WITH TaskPriorities AS (
    (SELECT TaskExecutor, Priority
     FROM Tasks
     WHERE TaskExecutor IN (SELECT UID FROM Users)
     ORDER BY Priority DESC LIMIT 3) 

     UNION

     (SELECT TaskExecutor, Priority
     FROM Tasks
     WHERE TaskExecutor IN (SELECT UID FROM Users)
     ORDER BY Priority ASC LIMIT 3)
)
SELECT Users.Name, Tasks.Heading, Tasks.Priority
FROM Users
JOIN Tasks ON Users.UID = Tasks.TaskExecutor
WHERE (Tasks.TaskExecutor, Tasks.Priority) IN (
    SELECT TaskExecutor, Priority FROM TaskPriorities
)
ORDER BY Users.Name;


WITH EvaluatedTasks AS (
    SELECT TaskExecutor,
           SUM((ABS(Evaluation) + Evaluation)/2) AS plus,
           SUM((ABS(Evaluation) - Evaluation)/2) AS minus
    FROM Tasks
    GROUP BY TaskExecutor
)
SELECT TaskExecutor AS id_executor, plus, minus
FROM EvaluatedTasks;


WITH AverageEvaluation AS (
    SELECT AVG(Evaluation) AS AvgEvaluation
    FROM Tasks
    WHERE Status IN ('Новая', 'Переоткрыта')
)
SELECT TaskExecutor, SUM(Evaluation) AS TotalEvaluation
FROM Tasks
JOIN AverageEvaluation ON Evaluation > AvgEvaluation
GROUP BY TaskExecutor;

5.2

create table folders(
folder_id integer primary key,
parent_folder_id integer,
folder_name CHAR(100),
foreign key(parent_folder_id) 
	REFERENCES folders(folder_id)
);

insert into folders (folder_id, parent_folder_id, folder_name) values
(1, null, 'root'),
(2, 1, '1A'),
(3, 1, '1B'),
(4, 2, '2A');

insert into folders (folder_id, parent_folder_id, folder_name) values
(5, 2, '2B'),
(6, 3, '3A');

WITH RECURSIVE FolderHierarchy AS (
    SELECT folder_id, parent_folder_id, folder_name, 1 AS DEEP
    FROM folders
    WHERE parent_folder_id IS NULL
    UNION ALL
    SELECT f.folder_id, f.parent_folder_id, f.folder_name, fh.DEEP + 1
    FROM folders f
    JOIN FolderHierarchy fh ON f.parent_folder_id = fh.folder_id
)
SELECT DEEP, COUNT(*) AS folder_count
FROM FolderHierarchy
GROUP BY DEEP
ORDER BY DEEP;



5.3
create table Tasks2 (
task_id int,
create_date date,
primary key (task_id, create_date)
)
